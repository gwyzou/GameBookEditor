/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.helmo.gbeditor;

import javafx.application.Application;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;
import org.helmo.gbeditor.infrastructure.RepoType;
import org.helmo.gbeditor.infrastructure.RepositoryFactory;
import org.helmo.gbeditor.repositories.IRepository;
import org.helmo.gbeditor.presenters.*;
import org.helmo.gbeditor.views.*;

/**
 * construit et exécute l'app
 */
@SuppressWarnings("PMD.ShortClassName")
public class App extends Application {

    /**
     * Fonction exécutée au lancement de l'application
     * @param args
     */
    public static void main(String[] args) {launch(args);}
    @Override
    public void start(Stage primaryStage) throws Exception {

        //initialising all views, presenter and linking them
        ViewStack viewStack = new ViewStack();
        MainPresenter mainPresenter=new MainPresenter();

        IRepository repo = RepositoryFactory.getRepo(RepoType.MYSQL);

        setupStructure(viewStack, mainPresenter, repo);

        //setting scene
        Parent root = viewStack.getRoot();
        Scene scene = new Scene(root, 800,600);
        primaryStage.setTitle("GBEditor");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    private void setupStructure(ViewStack viewStack, MainPresenter mainPresenter, IRepository repo) {
        LoginPresenter loginPresenter =new LoginPresenter(repo, mainPresenter);
        ViewLogin loginView=new ViewLogin(loginPresenter, viewStack);


        MainPagePresenter mainPagePresenter=new MainPagePresenter(repo, mainPresenter);
        ViewMainPage mainPageView = new ViewMainPage(mainPagePresenter, viewStack);


        CreateBookPresenter createBookPresenter=new CreateBookPresenter(repo, mainPresenter);
        ViewCrEdBook createBookView = new ViewCrEdBook(createBookPresenter, viewStack);

        PagePresenter pagePresenter= new PagePresenter(mainPresenter);
        ViewPage viewPage=new ViewPage(pagePresenter);

        createBookView.setViewPage(viewPage);


        //completing Map of ViewController
        viewStack.setView(loginView);
        viewStack.setView(mainPageView);
        viewStack.setView(createBookView);

        //initialising to LoginPage
        viewStack.setFirstView(loginView);
    }
}
